@using Common.Enums

<MudCheckBox T="bool" Value="Checked" ValueChanged="@(e => UpdateValue(e))" Color="Color"
             UnCheckedColor="UnCheckedColor" Disabled="Disabled" Label="@Label" LabelPosition="LabelPosition"/>

@code {
    [Parameter] public Color Color { get; set; } = Color.Default;
    [Parameter] public Color UnCheckedColor { get; set; } = (Color)(-1);
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public string? Label { get; set; }
    [Parameter] public LabelPosition LabelPosition { get; set; } = LabelPosition.Start;
    [Parameter] public required MatrixFeatures Flag { get; set; }
    [Parameter] public EventCallback<MatrixFeatures> FlagChanged { get; set; }
    [Parameter] public required MatrixFeatures FlagValue { get; set; }

    private bool Checked => Flag.HasFlag(FlagValue);

    protected override void OnInitialized()
    {
        if (UnCheckedColor == (Color)(-1))
        {
            UnCheckedColor = Color;
        }
    }

    private async void UpdateValue(bool value)
    {
        if (value)
        {
            Flag |= FlagValue;
            //Checked = true;
        }
        else
        {
            Flag &= ~FlagValue;
            //Checked = false;
        }

        await FlagChanged.InvokeAsync(Flag);
    }
}